// Package api provides primitives to interact with the openapi HTTP API.
//
// Code generated by unknown module path version unknown version DO NOT EDIT.
package api

import (
	"bytes"
	"compress/gzip"
	"encoding/base64"
	"fmt"
	"net/url"
	"path"
	"strings"

	"github.com/getkin/kin-openapi/openapi3"
)

// Base64 encoded, gzipped, json marshaled Swagger object
var swaggerSpec = []string{

	"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",
}

// GetSwagger returns the content of the embedded swagger specification file
// or error if failed to decode
func decodeSpec() ([]byte, error) {
	zipped, err := base64.StdEncoding.DecodeString(strings.Join(swaggerSpec, ""))
	if err != nil {
		return nil, fmt.Errorf("error base64 decoding spec: %s", err)
	}
	zr, err := gzip.NewReader(bytes.NewReader(zipped))
	if err != nil {
		return nil, fmt.Errorf("error decompressing spec: %s", err)
	}
	var buf bytes.Buffer
	_, err = buf.ReadFrom(zr)
	if err != nil {
		return nil, fmt.Errorf("error decompressing spec: %s", err)
	}

	return buf.Bytes(), nil
}

var rawSpec = decodeSpecCached()

// a naive cached of a decoded swagger spec
func decodeSpecCached() func() ([]byte, error) {
	data, err := decodeSpec()
	return func() ([]byte, error) {
		return data, err
	}
}

// Constructs a synthetic filesystem for resolving external references when loading openapi specifications.
func PathToRawSpec(pathToFile string) map[string]func() ([]byte, error) {
	var res = make(map[string]func() ([]byte, error))
	if len(pathToFile) > 0 {
		res[pathToFile] = rawSpec
	}

	return res
}

// GetSwagger returns the Swagger specification corresponding to the generated code
// in this file. The external references of Swagger specification are resolved.
// The logic of resolving external references is tightly connected to "import-mapping" feature.
// Externally referenced files must be embedded in the corresponding golang packages.
// Urls can be supported but this task was out of the scope.
func GetSwagger() (swagger *openapi3.T, err error) {
	var resolvePath = PathToRawSpec("")

	loader := openapi3.NewLoader()
	loader.IsExternalRefsAllowed = true
	loader.ReadFromURIFunc = func(loader *openapi3.Loader, url *url.URL) ([]byte, error) {
		var pathToFile = url.String()
		pathToFile = path.Clean(pathToFile)
		getSpec, ok := resolvePath[pathToFile]
		if !ok {
			err1 := fmt.Errorf("path not found: %s", pathToFile)
			return nil, err1
		}
		return getSpec()
	}
	var specData []byte
	specData, err = rawSpec()
	if err != nil {
		return
	}
	swagger, err = loader.LoadFromData(specData)
	if err != nil {
		return
	}
	return
}
