// Package api provides primitives to interact with the openapi HTTP API.
//
// Code generated by unknown module path version unknown version DO NOT EDIT.
package api

import (
	"bytes"
	"compress/gzip"
	"encoding/base64"
	"fmt"
	"net/url"
	"path"
	"strings"

	"github.com/getkin/kin-openapi/openapi3"
)

// Base64 encoded, gzipped, json marshaled Swagger object
var swaggerSpec = []string{

	"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",
	"uFis5O2lIjPb6+2/AgAA///+THQGlx8AAA==",
}

// GetSwagger returns the content of the embedded swagger specification file
// or error if failed to decode
func decodeSpec() ([]byte, error) {
	zipped, err := base64.StdEncoding.DecodeString(strings.Join(swaggerSpec, ""))
	if err != nil {
		return nil, fmt.Errorf("error base64 decoding spec: %s", err)
	}
	zr, err := gzip.NewReader(bytes.NewReader(zipped))
	if err != nil {
		return nil, fmt.Errorf("error decompressing spec: %s", err)
	}
	var buf bytes.Buffer
	_, err = buf.ReadFrom(zr)
	if err != nil {
		return nil, fmt.Errorf("error decompressing spec: %s", err)
	}

	return buf.Bytes(), nil
}

var rawSpec = decodeSpecCached()

// a naive cached of a decoded swagger spec
func decodeSpecCached() func() ([]byte, error) {
	data, err := decodeSpec()
	return func() ([]byte, error) {
		return data, err
	}
}

// Constructs a synthetic filesystem for resolving external references when loading openapi specifications.
func PathToRawSpec(pathToFile string) map[string]func() ([]byte, error) {
	var res = make(map[string]func() ([]byte, error))
	if len(pathToFile) > 0 {
		res[pathToFile] = rawSpec
	}

	return res
}

// GetSwagger returns the Swagger specification corresponding to the generated code
// in this file. The external references of Swagger specification are resolved.
// The logic of resolving external references is tightly connected to "import-mapping" feature.
// Externally referenced files must be embedded in the corresponding golang packages.
// Urls can be supported but this task was out of the scope.
func GetSwagger() (swagger *openapi3.T, err error) {
	var resolvePath = PathToRawSpec("")

	loader := openapi3.NewLoader()
	loader.IsExternalRefsAllowed = true
	loader.ReadFromURIFunc = func(loader *openapi3.Loader, url *url.URL) ([]byte, error) {
		var pathToFile = url.String()
		pathToFile = path.Clean(pathToFile)
		getSpec, ok := resolvePath[pathToFile]
		if !ok {
			err1 := fmt.Errorf("path not found: %s", pathToFile)
			return nil, err1
		}
		return getSpec()
	}
	var specData []byte
	specData, err = rawSpec()
	if err != nil {
		return
	}
	swagger, err = loader.LoadFromData(specData)
	if err != nil {
		return
	}
	return
}
